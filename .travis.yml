sudo: required
services:
  - docker

before_install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - touch ppay_app/.env
  - echo "POSTGRES_DB=$POSTGRES_DB" >> ppay_app/.env
  - echo "POSTGRES_USER=$POSTGRES_USER" >> ppay_app/.env
  - echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> ppay_app/.env
  - echo "POSTGRES_HOST=$POSTGRES_HOST" >> ppay_app/.env
  - echo "POSTGRES_PORT=5432" >> ppay_app/.env
  - echo "REDIS_HOST=$REDIS_HOST" >> ppay_app/.env
  - echo "RAILS_ENV=production" >> ppay_app/.env
  - echo "RAILS_MASTER_KEY=$RAILS_MASTER_KEY" >> ppay_app/.env
  - echo "APP_DOMAIN=test.test.com" >> ppay_app/.env
  - echo "RAILS_MIN_THREADS=$RAILS_MIN_THREADS" >> ppay_app/.env
  - echo "RAILS_MAX_THREADS=$RAILS_MAX_THREADS" >> ppay_app/.env
  - echo "PUMA_WORKERS=$PUMA_WORKERS" >> ppay_app/.env
  - echo "TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN" >> ppay_app/.env
  - echo "TELEGRAM_BOT_LINK=$TELEGRAM_BOT_LINK" >> ppay_app/.env
  - echo "GARANTEX_UID=$GARANTEX_UID" >> ppay_app/.env
  - echo "GARANTEX_PRIVATE_KEY=$GARANTEX_PRIVATE_KEY" >> ppay_app/.env
  - echo "EXTERNAL_BNN_CALLBACK_PROTOCOL=$EXTERNAL_BNN_CALLBACK_PROTOCOL" >> ppay_app/.env
  - echo "EXTERNAL_BNN_CALLBACK_ADDRESS=$EXTERNAL_BNN_CALLBACK_ADDRESS" >> ppay_app/.env
  - echo "TA_ADDRESS=$TA_ADDRESS" >> ppay_app/.env
  - echo "TA_PATH=$TA_PATH" >> ppay_app/.env
  - echo "TA_PROTOCOL=$TA_PROTOCOL" >> ppay_app/.env
  - cat ppay_app/.env
  - git add -f ppay_app/.env
  - git status
  - docker pull ruby:3.1.2-bullseye
  - docker build --build-arg BUNDLE_PATH=/bundle -t ppay_app_base -f ./ppay_app/Dockerfile.base ./ppay_app
  - docker-compose -f docker-compose-build.yml build
  - docker push ppay/ppay_prod_app
  - docker push ppay/ppay_prod_cron
  - docker push ppay/ppay_prod_nginx

script:
  - ls -al
  - ls -al ppay_app
  - git status

before_deploy:
  - git status

deploy:
  bucket_name: $AWS_BUCKET_NAME
  provider: elasticbeanstalk
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  region: $AWS_REGION
  app: $AWS_APP
  env: $AWS_ENV
  bucket_name: $AWS_BUCKET_NAME
  bucket_path: $AWS_BUCKET_PATH
  skip_cleanup: true
  on:
    branch: master
