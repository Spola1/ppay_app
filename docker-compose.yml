version: '3.8'
services:

  worker:
    image: "ppay/ppay_prod_app"
    hostname: worker
    depends_on:
      - app
    env_file: ./ppay_app/.env
    entrypoint: ./entrypoint-sidekiq.sh
    environment:
      - RAILS_ENV=production
      - BUNDLE_PATH=/bundle
    restart: unless-stopped
    volumes:
      - ./ppay_app/config/database.yml.docker:/app/config/database.yml
      - assets:/app/public/assets

  cron:
    image: "ppay/ppay_prod_cron"
    hostname: cron
    depends_on:
      - app
      - worker
    env_file: ./ppay_app/.env
    entrypoint: ./entrypoint-cron.sh
    environment:
      - RAILS_ENV=production
      - BUNDLE_PATH=/bundle
    restart: unless-stopped
    volumes:
      - ./ppay_app/config/database.yml.docker:/app/config/database.yml

  app:
    image: "ppay/ppay_prod_app"
    hostname: app
    ports:
      - 3000:3000
    env_file: ./ppay_app/.env
    entrypoint: ./entrypoint-rails.sh
    environment:
      - RAILS_ENV=production
      - BUNDLE_PATH=/bundle
    volumes:
      - ./ppay_app/config/database.yml.docker:/app/config/database.yml
      - assets:/app/public/assets

  nginx:
    image: "ppay/ppay_prod_nginx"
    hostname: nginx
    depends_on:
      - app
    ports:
      - 80:80
    volumes:
      - assets:/app/public/assets:ro

volumes:
  assets:
