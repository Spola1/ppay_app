#
services:

  postgres:
    image: postgres:14.5-bullseye
    restart: unless-stopped
    env_file: ./ppay_app/.env.dev
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7.0.5-bullseye
    restart: unless-stopped
    env_file: ./ppay_app/.env.dev
    volumes:
      - redis_data:/data

  worker:
    build:
      context: ./ppay_app
      dockerfile: Dockerfile
    depends_on:
      - app 
      - postgres
      - redis
    env_file: ./ppay_app/.env.dev
    #environment:
    #  RAILS_ENV: production
    entrypoint: ./ppay_app/entrypoint-sidekiq.sh
    #image: cloud.canister.io:5000/ffyy289/ppay_app_sidekiq:latest
    restart: unless-stopped
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules

  app:
    build:
      context: ./ppay_app
      dockerfile: Dockerfile
    depends_on:     
      - postgres
      - redis
    ports:
      - 3000:3000
    env_file: ./ppay_app/.env.dev
    entrypoint: ./ppay_app/entrypoint-rails.sh
    #image: cloud.canister.io:5000/ffyy289/ppay_app:latest
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules

  #nginx:    
  #  build:      
  #    context: .. 
  #    dockerfile: ./nginx/Dockerfile_nginx
  #  depends_on:      
  #    - app
  #  ports:      
  #    - 80:80
  #  #image: cloud.canister.io:5000/ffyy289/ppay_app_nginx:latest

volumes:
  gem_cache:
  db_data:
  node_modules:
  redis_data:
