= simple_form_for :payment_filters, url: payments_path,
  method: :get,
  data: { turbo_frame: 'content', turbo_action: :advance, controller: 'reset-form-button' },
  html: { class: 'filters'} do |f|

  .filters-grid
    = f.input :created_from, as: :date, html5: true, input_html:{ value: payment_filters_params(:created_from) },
      required: false
    = f.input :created_to, as: :date, html5: true,  input_html:{ value: payment_filters_params(:created_to) },
      required: false
    = f.input :cancellation_reason, collection: cancellation_reasons_collection, include_blank: 'Все',
      selected: payment_filters_params(:cancellation_reason), required: false
    = f.input :payment_status, collection: payment_statuses_collection, include_blank: 'Все',
      selected: payment_filters_params(:payment_status), required: false
    = f.input :payment_system, collection: PaymentSystem.pluck(:name), include_blank: 'Все',
      selected: payment_filters_params(:payment_system), required: false
    - if current_user.admin? || current_user.support?
      = f.input :merchant, collection: Merchant.pluck(:nickname, :id), include_blank: 'Все',
        selected: payment_filters_params(:merchant), value_method: :last, text_method: :first, required: false
    = f.input :national_currency, collection: NationalCurrency.pluck(:name), include_blank: 'Все',
      selected: payment_filters_params(:national_currency), required: false
    = f.input :national_currency_amount_from, as: :numeric,
      input_html:{ value: payment_filters_params(:national_currency_amount_from) }, required: false
    = f.input :national_currency_amount_to, as: :numeric,
      input_html:{ value: payment_filters_params(:national_currency_amount_to) }, required: false
    = f.input :cryptocurrency_amount_from, as: :numeric,
      input_html:{ value: payment_filters_params(:cryptocurrency_amount_from) }, required: false
    = f.input :cryptocurrency_amount_to, as: :numeric,
      input_html:{ value: payment_filters_params(:cryptocurrency_amount_to) }, required: false
    = f.input :uuid, as: :string, input_html:{ value: payment_filters_params(:uuid) },
      required: false
    = f.input :external_order_id, html5: true, input_html:{ value: payment_filters_params(:external_order_id) },
      required: false
    = f.input :card_number, as: :string, input_html: { value: payment_filters_params(:card_number) },
      required: false
    = f.input :advertisement_id, as: :string, input_html: { value: payment_filters_params(:advertisement_id) },
      required: false

  = f.submit t('buttons.submit'), class: 'form-submit'
  = link_to t('buttons.reset'), payments_path, data: { turbo_action: :advance }, class: 'reset-button'
