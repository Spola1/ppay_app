%section.wrap
  .card-wrap
    .item-card
      .flex.mb-4.items-center
        .text-xl
          Данные платежа
        .flex-1.px-4
          - if payment.completed?
            .badge.bg-green-600
              Завершён
          - if payment.cancelled?
            .badge.bg-gray-700
              Отменён
          - if payment.arbitration
            .badge
              На арбитраже
          - if payment.arbitration? && payment.arbitration_reason?
            .badge.bg-gray-200.text-red.border.border-red-600
              = arbitration_reason_translation(payment.arbitration_reason)

        - if role_namespace == 'supports' || role_namespace == 'processers'
          .flex
            - if local_assigns[:can_manage_payment?]
              = render "#{role_namespace}/payments/management_buttons", payment:, role_namespace:

      - if role_namespace == 'supports'
        = render "supports/payments/upload_check_buttons", payment:, role_namespace:

      - if role_namespace == 'merchants'
        = render "merchants/payments/management_buttons", payment:, role_namespace:

      .mt-4.mb-8.image-processer-block
        = render 'shared/staff/payments/image', payment:

      = simple_form_for payment, url: payment_path(payment), action: :update, html: { id: :payment_form } do |f|
        %table.item-card-table
          %tbody
            %tr.item-card-tr
              %td.item-card-td.item-card-td-label{ class: 'w-1/4' } UUID
              %td.item-card-td= "#{payment.uuid}"
            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Ссылка
              %td.item-card-td.whitespace-normal{id: "payment_link_with_uuid"}
                = "#{payment.decorate.url}"


            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Создан (MSK)
              %td.item-card-td= "#{payment.formatted_created_at_moscow}"
            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Тип
              %td.item-card-td
                = "#{payment.type}"
                %br
                - if payment.type == 'Deposit'
                  = "(продажа / sell / внесение средств)"
                - else
                  = "(покупка / buy / снятие средств)"
            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Статус
              %td.item-card-td
                - if local_assigns[:can_manage_payment?] && !payment.payment_status.in?(%w[completed cancelled]) && role_namespace != 'merchants'
                  = render "#{role_namespace}/payments/payment_status_field", f:, payment:
                - elsif local_assigns[:can_manage_payment?] && payment.payment_status == 'cancelled' &&          |
                        payment.available_cancelled_transactions? && role_namespace.in?(%w[supports processers]) |
                  .flex.flex-row.items-center.justify-between
                    = payment.human_payment_status
                    - if otp_payment_confirm?(payment)
                      = text_field_tag :otp_attempt
                    = f.submit 'Подтвердить платёж',
                      name: :restore,
                      onclick: 'return confirm(\'Вы уверены, что полностью получили платёж и хотите его подтвердить?\');',
                      class: 'green-button-payment-apply'
                - elsif local_assigns[:can_manage_payment?] && payment.payment_status == 'completed' &&   |
                        payment.transactions_rollbackable? && role_namespace.in?(%w[supports processers]) |
                  .flex.flex-row.items-center.justify-between
                    = payment.human_payment_status
                    .otp_button
                      - if otp_payment_confirm?(payment)
                        = text_field_tag :otp_attempt, nil, size: 5
                      = f.submit 'Откатить платёж',
                        name: :rollback,
                        onclick: 'return confirm(\'Вы уверены, что хотите откатить платёж?\');',
                        class: 'red-button'
                - else
                  = payment.human_payment_status

            - if role_namespace == 'supports' || role_namespace == 'merchants'
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Причина отмены
                %td.item-card-td
                  = render "supports/payments/payment_cancellation_reason_field", f:, payment:

            - if role_namespace == 'supports'
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Причина арбитража
                %td.item-card-td
                  = render "supports/payments/payment_arbitration_reason_field", f:, payment:

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label{ class: 'w-1/4' } Номер счёта
              %td.item-card-td= "#{payment.account_number}"

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Статус изменён
              %td.item-card-td
                = payment.formatted_status_changed_at

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Кол-во криптовалюты
              %td.item-card-td
                - if payment.cryptocurrency_amount
                  = "#{payment.cryptocurrency_four_digits}"
                - else
                  = "? (ещё не рассчитано)"

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Национальная валюта
              %td.item-card-td= "#{payment.national_currency}"

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Кол-во нац. валюты
              %td.item-card-td
                .flex.flex-row.items-center.justify-between
                  = "#{payment.decorate.national_formatted}"
                  - if payment.transactions.empty?
                    .change_national_currency_amount
                      = text_field_tag :national_currency_amount, nil, size: 5
                      = f.submit 'Изменить сумму',
                        name: :change_national_currency_amount,
                        onclick: 'return confirm(\'Вы уверены, что хотите изменить сумму?\');',
                        class: 'green-button-payment-apply'

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Платежная система
              %td.item-card-td
                - if payment.payment_system
                  = "#{payment.payment_system}"
                - else
                  = "? (не выбрана)"

            - if payment.cancelled_on_status
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Отменён на статусе
              %td.item-card-td= "#{payment.cancelled_on_status}"

            - if payment.cancellation_reason
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Причина отмены
                %td.item-card-td= "#{payment.human_cancellation_reason}"

            - if payment.arbitration_reason
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Причина арбитража
                %td.item-card-td= "#{payment.human_arbitration_reason}"

            - if payment.advertisement_not_found_reason
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label
                  Причина не найденных
                  %br
                  объявлений
                %td.item-card-td
                  = payment.human_advertisement_not_found_reason

            - if payment.advertisement_id
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label ID объявления
                %td.item-card-td= "#{payment.advertisement_id}"

            - if payment.advertisement
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label
                  Количество активных
                  %br
                  платежей в объявлении
                %td.item-card-td= payment.advertisement.payments.active.count

            - if payment.merchant_id && role_namespace == 'supports'
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Мерчант
                %td.item-card-td= payment.merchant.decorate.display_name
            - else
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Мерчант
                %td.item-card-td= payment.merchant.id

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Снимок курса
              %td.item-card-td
                - if payment.rate_snapshot
                  = "#{payment.adjusted_rate}"
                  %br
                  подробнее:
                  %br
                  = "направление: #{payment.rate_snapshot.direction}"
                  %br
                  = "криптовалюта: #{payment.rate_snapshot.cryptocurrency}"
                  %br
                  = "платежная система: #{payment.rate_snapshot.payment_system&.name}"
                  %br
                  = "биржа: #{payment.rate_snapshot.exchange_portal&.name}"
                - else
                  = "? (курс не привязан)"



            %tr.item-card-tr
              %td.item-card-td.item-card-td-label Номер карты
              %td.item-card-td
                - if payment.type == 'Deposit'
                  = payment.advertisement&.decorate&.formatted_card_number
                - else
                  = payment.formatted_card_number
            - if ['supports', 'admins'].include?(role_namespace)
              %tr.item-card-tr
                %td.item-card-td.item-card-td-label Количество посещений
                %td.item-card-td= payment.visits.size

            %tr.item-card-tr
              %td.item-card-td.item-card-td-label first_ip
              %td.item-card-td= "#{payment.first_ip}"
            %tr.item-card-tr
              %td.item-card-td.item-card-td-label first_user_agent
              %td.item-card-td= "#{payment.first_user_agent}"
            - if role_namespace.in?(%w[supports processers])
              = render "#{role_namespace}/payments/payment_audit", payment:

  - if local_assigns[:can_manage_payment?]
    .card-wrap
      - if payment_status_partial_exists?(payment, 'processers') && role_namespace != 'merchants' && role_namespace != 'supports'
        = render payment_status_partial(payment, 'processers'), payment:, signature:, role_namespace:

      .card-wrap.p-0

        .item-card{ class: 'min-w-[240px]' }
          = render 'shared/chat_content', payment:, role_namespace:
        - unless role_namespace == 'merchants'
          .item-card
            %p.text-xl.mb-2 Комментарии

            - if payment.comments.present?
              .flex.flex-col
                - payment.comments.decorate.each do |comment|
                  .flex.flex-col.my-2.items-start
                    .text-xs.mb-1
                    - if comment.author_nickname.present?
                      = comment.author_nickname
                    - else
                      = "#{comment.user.nickname} (#{comment.user.decorate.human_type})"
                    .comment_item.px-4.py-2.rounded-lg.text-sm.border{
                      class: comment.user&.support? ? 'bg-blue-100' : 'bg-slate-100'
                    }
                      .comment_item_text{ class: ('simbank-comment' if comment.author_nickname == Settings.simbank_nickname) }
                        = comment.text.gsub("\n", '<br />').html_safe
                    .text-xs.mt-1.text-gray-500
                      = comment.formatted_created_at

            .mt-4
              = form_for Comment.new, url: payment_comments_path(payment_uuid: payment.uuid), remote: true do |f|
                = f.text_area :text, class: 'form-input w-full h-16'
                = f.submit 'Добавить комментарий', class: 'form-submit mt-4'
