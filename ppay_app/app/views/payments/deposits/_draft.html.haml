.show-payment
  -unless browser.device.mobile? || browser.device.tablet?
    .show-second-block{style: payment.background_color_style}

  .show-payment-block
    .proc-head
      = render 'payments/merchant_logo', payment:
      .proc-text
        = render 'payments/select_locale', payment:, signature:

    .proc-amount-block
      .proc-amount-content
        = "#{payment.decorate.national_formatted} #{payment.national_currency}"


    .proc-shop-block
      .proc-shop-title
        = t('payments.deposit.attributes.shop')
      .proc-shop-content
        = payment.merchant.name

    .mt-1
      .proc-order-block
        .proc-order-title
          = t('payments.order')
        .proc-order-content
          = payment.external_order_id

    = render 'payments/errors', payment: payment

    .simple-form-for-payment-deposit
      = simple_form_for payment, url: payments_statuses_deposit_path(uuid: payment.uuid, signature:), action: :update do |f|
        .select-payment-system
          = f.label :payment_system, t('payments.deposit.attributes.choosing_payment_system')

        = f.select :payment_system, payment_systems_collection_for_payment(payment),
                   class: 'grey-drop-down'

        = hidden_field_tag :event, 'search'

        = f.submit t('payments.confirm'), class: "green-button-submit mt-3", style: payment.button_color_style

    .please-pay-from-bank
      = t('payments.deposit.attributes.request')

    = render 'payments/cancel_form', payment:, signature:, url: payments_statuses_deposit_path(uuid: payment.uuid, signature:)

    = render 'payments/uuid', payment:

  - if payment.arbitration
    = render 'shared/chat', payment:

  -unless browser.device.mobile? || browser.device.tablet?
    .show-second-block{style: payment.background_color_style}
      = render 'payments/qr_code', payment: payment

  :javascript
    window.paymentLanguage = "#{j payment.language_from_locale}";
