.show-payment
  -unless browser.device.mobile? || browser.device.tablet?
    .show-second-block{style: payment.background_color_style}
  .show-payment-block
    .proc-head
      = render 'payments/merchant_logo', payment: payment
      .proc-text
        = render 'payments/select_locale', payment:, signature:

    .proc-amount-block
      .proc-amount-content1{ 'data-controller': 'clipboard' }
        %div{ 'data-clipboard-target': 'source' }
          #{payment.decorate.national_formatted}
        %div.pr-3
          #{payment.national_currency}
        .copy-button
          = button_tag class: 'svg-button', data: { action: "click->clipboard#copy" } do
            = image_tag 'copy.svg', class: 'h-full'

    .proc-countdown-block
      = "#{t('payments.deposit.attributes.time_for_payment')}:"
      .text-red.font-medium{ data: { end_time: payment.countdown_end_time_for_clients, 'countdown-target': 'countdown' } }
        = payment.countdown

    .mt-1
      .proc-shop-block
        .proc-shop-title
          = t('payments.deposit.attributes.shop')
        .proc-shop-content
          = payment.merchant.name

    .proc-order-block
      .proc-order-title
        = t('payments.order')
      .proc-order-content
        = payment.external_order_id

    .text-instruction
      %span.text-red
        1.
      %span
        = t('payments.deposit.attributes.make_transfer')

    = render 'payments/deposits/change_sum', payment: payment
    = render 'payments/deposits/iban', payment: payment, signature:
    = render 'payments/deposits/bank_card', payment: payment


    = simple_form_for payment, url: payments_statuses_deposit_path(uuid: payment.uuid, signature:), action: :update do |f|
      = hidden_field_tag :event, 'check'

      - if payment.merchant.check_required?

        .add-img-confirm
          %span.text-red
            2.
          %span
            = "#{t('payments.deposit.attributes.add_receipt_image')}:"

        - if payment.image.present?
          = image_tag payment.image

        = render 'payments/errors', payment: payment

        = f.file_field :image, class: 'filepond',
                              direct_upload: true,
                              data: { controller: 'filepond', 'max-file-size': '5MB' }

      - if payment.merchant.check_required?
        .text-instruction
          %span.text-red
            3.
          %span
            = t('payments.deposit.attributes.click_payment_completed_button')

      - else
        .text-instruction
          %span.text-red
            2.
          %span
            = t('payments.deposit.attributes.click_payment_completed_button')

      = f.submit t('payments.deposit.attributes.payment_completed'), class: 'green-button mt-2 mb-5', style: payment.button_color_style

    .block-sending-cancel-on-img-form
      = render 'payments/cancel_form', payment:, signature:, url: payments_statuses_deposit_path(uuid: payment.uuid, signature:)

    = render 'payments/uuid', payment:
    
  - if payment.arbitration
    = render 'shared/chat', payment:
    
  -unless browser.device.mobile? || browser.device.tablet?
    .show-second-block{style: payment.background_color_style}
      = render 'payments/qr_code', payment: payment

  :javascript
    window.paymentLanguage = "#{j payment.language_from_locale}";

